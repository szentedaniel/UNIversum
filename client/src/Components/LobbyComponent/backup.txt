<div className='flex flex-col p-5'>
        <h1>{t('username')}:</h1>
        <h2 className="text_shadows">{username}</h2>

        <>
          <h2>{t('not_in_lobby')}</h2>
          {<>
            <Link to='/create'>
              <button className="pushable" >
                <span className="front">{t('create_lobby')}</span>
              </button>
            </Link>
            <p>{t('or')}</p>
            <div className="flex flex-wrap -mx-3 mb-2 center self-center content-center justify-center items-center">
              <div className=" max-w-md px-3 ">
                {/* <label className="block uppercase text-proba-200 text-xs font-bold mb-2" for="grid-first-name">
                Room's name
              </label> */}
                <input onKeyPress={(e) => inputCodeHandler(e)} type="text" onChange={e => setRoomCode(e.target.value)} className="appearance-none focus:ring-indigo-500 block w-full bg-proba-400 text-proba-200 border border-red-500 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-proba-400" id="grid-first-name" />
                {/* <p className="text-red-500 text-xs italic">Please fill out this field.</p> */}
              </div>
              <button className="pushable" onClick={() => joinRoom(roomCode)}>
                <span className="front">{t('join_lobby')}</span>
              </button>
            </div>

            {/* <input onKeyPress={(e) => inputCodeHandler(e)} type="text" onChange={e => setRoomCode(e.target.value)} /> */}

            <p>{t('or')}</p>

            <Link to='/rooms' state={{ rooms: rooms }}>
              <button className="pushable">
                <span className="front">{t('show_lobbies')}</span>
              </button>
            </Link>
          </>
          }
        </>
      </div>
      <div className='flex flex-col h-full border-4 border-proba-100/20 rounded-2xl items-center border-solid px-3'>
        <Card
          component={motion.div}
          initial={{ x: 200 }}
          animate={{ x: 0 }}
          transition={{ bounceDamping: 0 }}
          className="w-full max-w-400 mx-auto m-16 md:m-0 rounded-20 md:rounded-none"
          square
          layout
        >
          <CardContent className="flex flex-col items-center justify-center p-16 sm:p-32 md:p-48 md:pt-128 ">
            <Typography variant="h6" className="mb-24 font-semibold text-18 sm:text-24">
              {t('CREATE_TITLE')}
            </Typography>

            <form
              name="registerForm"
              noValidate
              className="flex flex-col justify-center w-full"
              onSubmit={handleSubmit(onSubmit)}
            >
              <Controller
                name="name"
                control={control}
                render={({ field }) => (
                  <TextField
                    {...field}
                    className="mb-16"
                    label={t('NAME')}
                    autoFocus
                    type="name"
                    error={!!errors.name}
                    helperText={errors?.name?.message}
                    variant="outlined"
                    required
                    fullWidth
                  />
                )}
              />

              <Controller
                name="email"
                control={control}
                render={({ field }) => (
                  <TextField
                    {...field}
                    className="mb-16"
                    label="Email"
                    type="email"
                    error={!!errors.email}
                    helperText={errors?.email?.message}
                    variant="outlined"
                    required
                    fullWidth
                  />
                )}
              />

              <Controller
                name="password"
                control={control}
                render={({ field }) => (
                  <TextField
                    {...field}
                    className="mb-16"
                    label={t('PASSWORD')}
                    type="password"
                    error={!!errors.password}
                    helperText={errors?.password?.message}
                    variant="outlined"
                    required
                    fullWidth
                  />
                )}
              />

              <Controller
                name="passwordConfirm"
                control={control}
                render={({ field }) => (
                  <TextField
                    {...field}
                    className="mb-16"
                    label={t('PASSWORD_CONFIRM')}
                    type="password"
                    error={!!errors.passwordConfirm}
                    helperText={errors?.passwordConfirm?.message}
                    variant="outlined"
                    required
                    fullWidth
                  />
                )}
              />

              <Controller
                name="acceptTermsConditions"
                control={control}
                render={({ field }) => (
                  <FormControl className="items-center" error={!!errors.acceptTermsConditions}>
                    <FormControlLabel label={t('AFSZ')} control={<Checkbox {...field} />} />
                    <FormHelperText>{errors?.acceptTermsConditions?.message}</FormHelperText>
                  </FormControl>
                )}
              />

              <Button
                variant="contained"
                color="primary"
                className="w-full mx-auto mt-16"
                aria-label="Register"
                disabled={_.isEmpty(dirtyFields) || !isValid}
                type="submit"
              >
                {t('REGISTER_BUTTON')}
              </Button>
            </form>

            <div className="flex flex-col items-center justify-center pt-32 pb-24">
              <span className="font-normal">{t('ALREADY_TITLE')}</span>
              <Link className="font-normal" to="/login">
                {t('LOGIN_BUTTON')}
              </Link>
            </div>
          </CardContent>
        </Card>
      </div>